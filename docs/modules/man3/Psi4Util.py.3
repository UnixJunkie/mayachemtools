.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Psi4Util 1"
.TH Psi4Util 1 "2022-09-25" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Psi4Util
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
import Psi4Util
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBPsi4Util\fR module provides the following functions:
.PP
CalculateSinglePointEnergy, GetAtomPositions, InitializePsi4,
JoinMethodNameAndBasisSet, ListPsi4RunParamaters, PerformGeometryOptimization,
ProcessPsi4CubeFilesParameters, ProcessPsi4OptionsParameters,
ProcessPsi4RunParameters, RemoveScratchFiles, RetrieveIsocontourRangeFromCubeFile,
RetrieveMinAndMaxValueFromCubeFile, UpdatePsi4OptionsParameters,
UpdatePsi4OutputFileUsingPID, UpdatePsi4RunParameters
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "\fBCalculateSinglePointEnergy\fR" 4
.IX Item "CalculateSinglePointEnergy"
.Vb 1
\&    CalculateSinglePointEnergy(psi4, Molecule, Method, BasisSet, ReturnWaveFunction = False, Quiet = False)
.Ve
.Sp
Calculate single point electronic energy in Hartrees using a specified
method and basis set.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 6
\&    psi4 (Object): Psi4 module reference.
\&    Molecule (Object): Psi4 molecule object.
\&    Method (str): A valid method name.
\&    BasisSet (str): A valid basis set.
\&    ReturnWaveFunction (boolean): Return wave function.
\&    Quiet (boolean): Flag to print error message.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 2
\&    float: Total electronic energy in Hartrees.
\&    (float, psi4 object): Energy and wavefuction.
.Ve
.IP "\fBGetAtomPositions\fR" 4
.IX Item "GetAtomPositions"
.Vb 1
\&    GetAtomPositions(psi4, WaveFunction, InAngstroms = True)
.Ve
.Sp
Retrieve a list of lists containing coordinates of all atoms in the
molecule available in Psi4 wave function. By default, the atom positions
are returned in Angstroms. The Psi4 default is Bohr.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 3
\&    psi4 (Object): Psi4 module reference.
\&    WaveFunction (Object): Psi4 wave function reference.
\&    InAngstroms (bool): True \- Positions in Angstroms; Otherwise, in Bohr.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    None or list : List of lists containing atom positions.
.Ve
.Sp
\&\fIExample(s):\fR
.Sp
.Vb 3
\&    for AtomPosition in Psi4Util.GetAtomPositions(Psi4Handle, WaveFunction):
\&        print("X: %s; Y: %s; Z: %s" % (AtomPosition[0], AtomPosition[1],
\&            AtomPosition[2]))
.Ve
.IP "\fBInitializePsi4\fR" 4
.IX Item "InitializePsi4"
.Vb 1
\&    InitializePsi4(Psi4RunParams = None,  Psi4OptionsParams = None, PrintVersion = False, PrintHeader = False)
.Ve
.Sp
Import Psi4 module and configure it for running Psi4 jobs.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 5
\&    Psi4RunParams (dict): Runtime parameter name and value pairs.
\&    Psi4OptionsParams (dict): Option name and value pairs. This is simply
\&        passed to ps4.set_options().      
\&    PrintVersion (boolean): Print version number.
\&    PrintHeader (boolean): Print header information.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    Object: Psi4 module reference.
.Ve
.IP "\fBJoinMethodNameAndBasisSet\fR" 4
.IX Item "JoinMethodNameAndBasisSet"
.Vb 1
\&    JoinMethodNameAndBasisSet(MethodName, BasisSet)
.Ve
.Sp
Join method name and basis set using a backslash delimiter.
An empty basis set specification is ignored.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 2
\&    MethodName (str): A valid method name.
\&    BasisSet (str): A valid basis set or an empty string.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    str: MethodName/BasisSet or MethodName
.Ve
.IP "\fBListPsi4RunParamaters\fR" 4
.IX Item "ListPsi4RunParamaters"
.Vb 1
\&    ListPsi4RunParamaters(psi4)
.Ve
.Sp
List values for a key set of the following Psi4 runtime parameters:
Memory, NumThreads, OutputFile, ScratchDir, DataDir.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 1
\&    psi4 (object): Psi4 module reference.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    None
.Ve
.IP "\fBPerformGeometryOptimization\fR" 4
.IX Item "PerformGeometryOptimization"
.Vb 1
\&    PerformGeometryOptimization(psi4, Molecule, Method, BasisSet, ReturnWaveFunction = True, Quiet = False)
.Ve
.Sp
Perform geometry optimization using a specified method and basis set.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 6
\&    psi4 (Object): Psi4 module reference.
\&    Molecule (Object): Psi4 molecule object.
\&    Method (str): A valid method name.
\&    BasisSet (str): A valid basis set.
\&    ReturnWaveFunction (boolean): Return wave function.
\&    Quiet (boolean): Flag to print error message.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 2
\&    float: Total electronic energy in Hartrees.
\&    (float, psi4 object): Energy and wavefuction.
.Ve
.IP "\fBProcessPsi4CubeFilesParameters\fR" 4
.IX Item "ProcessPsi4CubeFilesParameters"
.Vb 1
\&    ProcessPsi4CubeFilesParameters(ParamsOptionName, ParamsOptionValue, ParamsDefaultInfo = None)
.Ve
.Sp
Process parameters for Psi4 runs and return a map containing processed
parameter names and values.
.Sp
ParamsOptionValue is a comma delimited list of parameter name and value pairs
for generating cube files.
.Sp
The supported parameter names along with their default and possible
values are shown below:
.Sp
GridSpacing, 0.2, GridOverage, 4.0, IsoContourThreshold, 0.85
.Sp
GridSpacing: Units: Bohr. A higher value reduces the size of the cube files
on the disk. This option corresponds to Psi4 option \s-1CUBIC_GRID_SPACING.\s0
.Sp
GridOverage: Units: Bohr.This option corresponds to Psi4 option
\&\s-1CUBIC_GRID_OVERAGE.\s0
.Sp
.Vb 3
\& IsoContourThreshold captures specified percent of the probability density
\& using the least amount of grid points. This option corresponds to Psi4 option
\& CUBEPROP_ISOCONTOUR_THRESHOLD.
.Ve
.Sp
\&\fIArguments:\fR
.Sp
.Vb 3
\&    ParamsOptionName (str): Command line Psi4 cube files option name.
\&    ParamsOptionValues (str): Comma delimited list of parameter name and value pairs.
\&    ParamsDefaultInfo (dict): Default values to override for selected parameters.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    dictionary: Processed parameter name and value pairs.
.Ve
.IP "\fBProcessPsi4OptionsParameters\fR" 4
.IX Item "ProcessPsi4OptionsParameters"
.Vb 1
\&    ProcessPsi4OptionsParameters(ParamsOptionName, ParamsOptionValue)
.Ve
.Sp
Process parameters for setting up Psi4 options and return a map
containing processed parameter names and values.
.Sp
ParamsOptionValue is a comma delimited list of Psi4 option name and value
pairs for setting global and module options. The names are 'option_name'
for global options and 'module_name_\|_option_name' for options local to a
module. The specified option names must be valid Psi4 names. No validation
is performed.
.Sp
The specified option name and  value pairs are processed and passed to
psi4.\fIset_options()\fR as a dictionary. The supported value types are float,
integer, boolean, or string. The float value string is converted into a float.
The valid values for a boolean string are yes, no, true, false, on, or off.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 2
\&    ParamsOptionName (str): Command line input parameters option name.
\&    ParamsOptionValue (str): Comma delimited list of parameter name and value pairs.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    dictionary: Processed parameter name and value pairs.
.Ve
.IP "\fBProcessPsi4RunParameters\fR" 4
.IX Item "ProcessPsi4RunParameters"
.Vb 1
\&    ProcessPsi4RunParameters(ParamsOptionName, ParamsOptionValue, InfileName = None, ParamsDefaultInfo = None)
.Ve
.Sp
Process parameters for Psi4 runs and return a map containing processed
parameter names and values.
.Sp
ParamsOptionValue a comma delimited list of parameter name and value pairs
for configuring Psi4 jobs.
.Sp
The supported parameter names along with their default and possible
values are shown below:
.Sp
MemoryInGB,1,NumThreads,1,OutputFile,auto,ScratchDir,auto,
RemoveOutputFile,yes
.Sp
Possible  values: OutputFile \- stdout, quiet, or FileName; OutputFile \-
DirName; RemoveOutputFile \- yes, no, true, or false
.Sp
These parameters control the runtime behavior of Psi4.
.Sp
The default for 'OutputFile' is a file name <InFileRoot>_Psi4.out. The \s-1PID\s0
is appened the output file name during multiprocessing. The 'stdout' value
for 'OutputType' sends Psi4 output to stdout. The 'quiet' or 'devnull' value
suppresses all Psi4 output.
.Sp
The default 'Yes' value of 'RemoveOutputFile' option forces the removal
of any existing Psi4 before creating new files to append output from
multiple Psi4 runs.
.Sp
The option 'ScratchDir' is a directory path to the location of scratch
files. The default value corresponds to Psi4 default. It may be used to
override the deafult path.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 4
\&    ParamsOptionName (str): Command line Psi4 run parameters option name.
\&    ParamsOptionValues (str): Comma delimited list of parameter name and value pairs.
\&    InfileName (str): Name of input file.
\&    ParamsDefaultInfo (dict): Default values to override for selected parameters.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    dictionary: Processed parameter name and value pairs.
.Ve
.Sp
The parameter name and values specified in ParamsOptionValues are validated before
returning them in a dictionary.
.IP "\fBRemoveScratchFiles\fR" 4
.IX Item "RemoveScratchFiles"
.Vb 1
\&    RemoveScratchFiles(psi4, OutputFile, PID = None)
.Ve
.Sp
Remove any leftover scratch files associated with the specified output
file. The file specification, <OutfileRoot>.*<\s-1PID\s0>.* is used to collect and
remove files from the scratch directory. In addition, the file
psi.<\s-1PID\s0>.clean, in current directory is removed.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 3
\&    psi4 (object): psi4 module reference.
\&    OutputFile (str): Output file name.
\&    PID (int): Process ID or None.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    None
.Ve
.IP "\fBRetrieveIsocontourRangeFromCubeFile\fR" 4
.IX Item "RetrieveIsocontourRangeFromCubeFile"
.Vb 1
\&    RetrieveIsocontourRangeFromCubeFile(CubeFileName)
.Ve
.Sp
Retrieve isocontour range values from the cube file. The range
values are retrieved from the second line in the cube file after
the string 'Isocontour range'.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 1
\&    CubeFileName (str): Cube file name.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 2
\&    float: Minimum range value.
\&    float: Maximum range value.
.Ve
.IP "\fBRetrieveMinAndMaxValueFromCubeFile\fR" 4
.IX Item "RetrieveMinAndMaxValueFromCubeFile"
.Vb 1
\&    RetrieveMinAndMaxValueFromCubeFile(CubeFileName)
.Ve
.Sp
Retrieve minimum and maxmimum grid values from the cube file.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 1
\&    CubeFileName (str): Cube file name.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 2
\&    float: Minimum value.
\&    float: Maximum value.
.Ve
.IP "\fBUpdatePsi4OptionsParameters\fR" 4
.IX Item "UpdatePsi4OptionsParameters"
.Vb 1
\&    UpdatePsi4OptionsParameters(psi4, OptionsInfo)
.Ve
.Sp
Update Psi4 options using psi4.\fIset_options()\fR.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 3
\&    psi4 (object): Psi4 module reference.
\&    OptionsInfo (dictionary) : Option name and value pairs for setting
\&        global and module options.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    None
.Ve
.IP "\fBUpdatePsi4OutputFileUsingPID\fR" 4
.IX Item "UpdatePsi4OutputFileUsingPID"
.Vb 1
\&    UpdatePsi4OutputFileUsingPID(OutputFile, PID = None)
.Ve
.Sp
Append \s-1PID\s0 to output file name. The \s-1PID\s0 is automatically retrieved
during None value of \s-1PID.\s0
.Sp
\&\fIArguments:\fR
.Sp
.Vb 2
\&    OutputFile (str): Output file name.
\&    PID (int): Process ID or None.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    str: Update output file name. Format: <OutFieRoot>_<PID>.<OutFileExt>
.Ve
.IP "\fBUpdatePsi4RunParameters\fR" 4
.IX Item "UpdatePsi4RunParameters"
.Vb 1
\&    UpdatePsi4RunParameters(psi4, RunParamsInfo)
.Ve
.Sp
Update Psi4 runtime parameters. The supported parameter names along with
their default values are as follows: MemoryInGB: 1; NumThreads: 1, OutputFile:
stdout; ScratchDir: auto; RemoveOutputFile: True.
.Sp
\&\fIArguments:\fR
.Sp
.Vb 3
\&    psi4 (object): Psi4 module reference.
\&    RunParamsInfo (dictionary) : Parameter name and value pairs for
\&        configuring Psi4 jobs.
.Ve
.Sp
\&\fIReturns:\fR
.Sp
.Vb 1
\&    None
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2022 Manish Sud. All rights reserved.
.PP
The functionality available in this file is implemented using Psi4, an open
source quantum chemistry software package.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option) any
later version.
